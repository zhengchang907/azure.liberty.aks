name: Package ARM
on:
  workflow_dispatch:
    inputs:
      pid:
        description: 'Customer usage attribution ID in Azure Partner center'
        required: true
        default: 'pid-68a0b448-a573-4012-ab25-d5dc9842063e-partnercenter'
  # Allows you to run this workflow using GitHub APIs
  # PERSONAL_ACCESS_TOKEN=<GITHUB_PERSONAL_ACCESS_TOKEN>
  # REPO_NAME=WASdev/azure.liberty.aks
  # curl --verbose -XPOST -u "WASdev:${PERSONAL_ACCESS_TOKEN}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/${REPO_NAME}/actions/workflows/package.yaml/dispatches --data '{"ref": "master", "inputs":{"pid": "xxx"}}'
  repository_dispatch:
    types: [package]
  # sample request
  # PERSONAL_ACCESS_TOKEN=<GITHUB_PERSONAL_ACCESS_TOKEN>
  # REPO_NAME=WASdev/azure.liberty.aks
  # curl --verbose -X POST https://api.github.com/repos/${REPO_NAME}/dispatches -H "Accept: application/vnd.github.everest-preview+json" -H "Authorization: token ${PERSONAL_ACCESS_TOKEN}" --data '{"event_type": "package", "client_payload":{"pid": "xxx"}}'
env:
  refArmttk: d97aa57d259e2fc8562e11501b1cf902265129d9
  refJavaee: 85d5d10dd045a90452ae01cad20b258ce853ec18
  repoName: "azure.liberty.aks"

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - name: Setup pid
        id: setup-pid-based-on-dispatch-event
        run: |
          if [ ${{ github.event_name }} == 'workflow_dispatch' ]; then
            pid=${{ github.event.inputs.pid }}
          else
            pid=${{ github.event.client_payload.pid }}
            if [ -z "$pid" ]
            then
              pid=pid-68a0b448-a573-4012-ab25-d5dc9842063e-partnercenter
            fi
          fi
          echo "##[set-output name=pid;]${pid}"
          echo "pid=${pid}" >> $GITHUB_ENV
      - name: Checkout azure-javaee-iaas
        uses: actions/checkout@v2
        with:
          repository: Azure/azure-javaee-iaas
          path: azure-javaee-iaas
          ref: ${{ env.refJavaee }}
      - name: Checkout arm-ttk
        uses: actions/checkout@v2
        with:
          repository: Azure/arm-ttk
          path: arm-ttk
          ref: ${{ env.refArmttk }}
      - name: Checkout ${{ env.repoName }}
        uses: actions/checkout@v2
        with:
          path: ${{ env.repoName }}
          ref: ${{ github.event.inputs.ref }}
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build azure-javaee-iaas
        run: mvn -DskipTests clean install --file azure-javaee-iaas/pom.xml

      - name: Build and test ${{ env.repoName }}
        run: |
          cd ${{ env.repoName }}
          mvn -Ptemplate-validation-tests clean install -Dcustomer.usage.attribution.id=${{ env.pid }}
      - name: Generate artifact file name and path
        id: artifact_file
        run: |
          version=$(awk '/<version>[^<]+<\/version>/{gsub(/<version>|<\/version>/,"",$1);print $1;exit;}' ${{ env.repoName }}/pom.xml)
          artifactName=${{ env.repoName }}-$version-arm-assembly
          unzip ${{ env.repoName }}/target/$artifactName.zip -d ${{ env.repoName }}/target/$artifactName
          echo "##[set-output name=artifactName;]${artifactName}"
          echo "##[set-output name=artifactPath;]${{ env.repoName }}/target/$artifactName"
      - name: Archive ${{ env.repoName }} template
        uses: actions/upload-artifact@v1
        if: success()
        with:
          name: ${{steps.artifact_file.outputs.artifactName}}
          path: ${{steps.artifact_file.outputs.artifactPath}}
